<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<PropertyGroup>
		<RootDir Condition="'$(teamcity_version)' == ''">$(MSBuildProjectDirectory)\..</RootDir>
		<RootDir Condition="'$(teamcity_version)' != ''">$(teamcity_build_checkoutDir)</RootDir>
		<BUILD_NUMBER Condition="'$(BUILD_NUMBER)'==''">0.0.0.0</BUILD_NUMBER>
		<Solution>Glyssen.sln</Solution>
		<ApplicationName>Glyssen</ApplicationName>
		<Configuration>Release</Configuration>
		<useNUnit-x86 Condition="'$(OS)'=='Windows_NT'">true</useNUnit-x86>
		<useNUnit-x86 Condition="'$(OS)'!='Windows_NT'">false</useNUnit-x86>
		<ExtraExcludeCategories Condition="'$(teamcity_version)' != ''">SkipOnTeamCity,$(ExtraExcludeCategories)</ExtraExcludeCategories>
		<TeamCity Condition="'$(teamcity_version)' != ''">true</TeamCity>
		<TeamCity Condition="'$(teamcity_version)' == ''">false</TeamCity>
		<RestartBuild Condition="!Exists('$(RootDir)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll')">true</RestartBuild>
		<RestartBuild Condition="Exists('$(RootDir)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll')">false</RestartBuild>
	</PropertyGroup>

  <UsingTask TaskName="StampAssemblies"
    AssemblyFile="$(RootDir)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll"
    Condition="Exists('$(RootDir)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll')" />
  <UsingTask TaskName="MakeWixForDirTree"
    AssemblyFile="$(RootDir)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll"
    Condition="Exists('$(RootDir)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll')" />
  <UsingTask TaskName="Split"
    AssemblyFile="$(RootDir)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll"
    Condition="Exists('$(RootDir)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll')" />
  <UsingTask TaskName="FileUpdate"
    AssemblyFile="$(RootDir)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll"
    Condition="Exists('$(RootDir)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll')" />
  <UsingTask TaskName="NUnit3" AssemblyFile="$(RootDir)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll" />
  <Import Project="../.nuget/NuGet.targets" />

  <Target Name="RestoreBuildTasks" DependsOnTargets="CheckPrerequisites">
    <Message Text="Calling nuget restore" />
    <Exec Command='$(NuGetCommand) restore ../$(Solution)' />
    <Exec Command='$(NuGetCommand) install SIL.BuildTasks -excludeVersion -version 1.0.2 -source "$(PackageSources)" -solutionDirectory "$(SolutionDir)."' />
    <Message Text="RestartBuild=$(RestartBuild)"/>
    <MSBuild Projects="$(MSBuildProjectFullPath)" Targets="BuildInternal"
      Properties="Configuration=$(Configuration)" Condition="$(RestartBuild)" />
  </Target>

	<Target Name="VersionNumbers">
	<Message Text="BUILD_NUMBER: $(BUILD_NUMBER)" Importance="high"/>

	<Split Input="$(BUILD_NUMBER)" Delimiter="." OutputSubString="2">
		<Output TaskParameter="ReturnValue" PropertyName="BuildCounter" />
	</Split>
	<Split Input="$(BUILD_NUMBER)" Delimiter="." OutputSubString="3">
		<Output TaskParameter="ReturnValue" PropertyName="BuildHash" />
	</Split>

	<Message Text="BuildCounter: $(BuildCounter)" Importance="high"/>
	<Message Text="BuildHash: $(BuildHash)" Importance="high"/>

	<!-- For now, mimicking Bloom's strategy of updating the version number here (not on TeamCity, not in the assemblies). -->
	<CreateProperty Value="1.3.$(BuildCounter)">
		<Output PropertyName="Version" TaskParameter="Value"/>
	</CreateProperty>
	<CreateProperty Value="$(Version).$(BuildHash)">
		<Output PropertyName="FullVersion" TaskParameter="Value"/>
	</CreateProperty>
	<CreateProperty Value="GlyssenInstaller.$(Version).msi" Condition=" '$(Label)' == '' ">
		<Output PropertyName="InstallerFileName" TaskParameter="Value"/>
	</CreateProperty>
	<CreateProperty Value="GlyssenInstaller.$(Version).$(Label).msi" Condition=" '$(Label)' != '' ">
		<Output PropertyName="InstallerFileName" TaskParameter="Value"/>
	</CreateProperty>
	<Message Text="Version: $(Version)" Importance="high"/>
	<Message Text="FullVersion: $(FullVersion)" Importance="high"/>
	</Target>

	<!-- Reference Text Utility version numbers -->
	<Target Name="RTUVersionNumbers">
	<Message Text="Reference Text Utility BUILD_NUMBER: $(BUILD_NUMBER)" Importance="high"/>

	<Split Input="$(BUILD_NUMBER)" Delimiter="." OutputSubString="2">
		<Output TaskParameter="ReturnValue" PropertyName="RTUBuildCounter" />
	</Split>
	<Split Input="$(BUILD_NUMBER)" Delimiter="." OutputSubString="3">
		<Output TaskParameter="ReturnValue" PropertyName="RTUBuildHash" />
	</Split>

	<Message Text="Reference Text Utility BuildCounter: $(RTUBuildCounter)" Importance="high"/>
	<Message Text="Reference Text Utility BuildHash: $(RTUBuildHash)" Importance="high"/>

	<!-- For now, mimicking Bloom's strategy of updating the version number here (not on TeamCity, not in the assemblies). -->
	<CreateProperty Value="1.0.$(RTUBuildCounter)">
		<Output PropertyName="RTUVersion" TaskParameter="Value"/>
	</CreateProperty>
	<CreateProperty Value="$(RTUVersion).$(RTUBuildHash)">
		<Output PropertyName="RTUFullVersion" TaskParameter="Value"/>
	</CreateProperty>
	<CreateProperty Value="GlyssenRefTextUtilInstaller.$(RTUVersion).msi">
		<Output PropertyName="RTUInstallerFileName" TaskParameter="Value"/>
	</CreateProperty>
	<Message Text="Reference Text Utility Version: $(RTUVersion)" Importance="high"/>
	<Message Text="Reference Text Utility FullVersion: $(RTUFullVersion)" Importance="high"/>
	</Target>

	<Target Name="SetAssemblyVersion" DependsOnTargets="VersionNumbers">
	<ItemGroup>
		<AssemblyInfoFiles Include="$(RootDir)/**/AssemblyInfo.cs"/>
	</ItemGroup>
	<StampAssemblies Version="$(Version)" InputAssemblyPaths="@(AssemblyInfoFiles)" />
	</Target>

  <Target Name="Build">
    <CallTarget Targets="RestoreBuildTasks"/>
    <CallTarget Targets="BuildInternal" Condition="!$(RestartBuild)" />
  </Target>

  <Target Name="BuildInternal" DependsOnTargets="SetAssemblyVersion">
    <MSBuild Projects="$(RootDir)/$(Solution)"
      Targets="Rebuild"
      Properties="Configuration=$(Configuration)" />
  </Target>

	<Target Name="Test" DependsOnTargets="Build">
		<!-- Note: the Exclude here is (hopefully) a temporary solution.
		Ultimately, it would be better not to have a dependency on a project
		which itself contains tests. Let's move the test scaffolding in SIL.DblBundle.Tests
		into a separate test scaffolding dll
		Note: the following line needs to use backslashes; otherwise, the Exclude directive doesn't work. -->
		<CreateItem Include="$(RootDir)\output\$(Configuration)\**\*Tests.dll" Exclude="$(RootDir)\output\$(Configuration)\SIL.DblBundle.Tests.dll">
			<Output ItemName="TestAssemblies" TaskParameter="Include" />
		</CreateItem>
		<NUnit3
			TeamCity="$(TeamCity)"
			Verbose="true"
			ToolPath="$(RootDir)/packages/NUnit.ConsoleRunner.3.11.1/tools"
			WorkingDirectory="$(RootDir)/output/$(Configuration)"
			Assemblies="@(TestAssemblies)"
			ExcludeCategory="$(ExtraExcludeCategories)$(excludedCategories)" 
			Force32Bit="false" />
	</Target>
	
	<Target Name="Installer" DependsOnTargets="VersionNumbers; MakeWixForDistFiles; MakeWixForXulRunner; Build ">

		<!-- set the version number in the installer configuration program.	Perhaps there's a way to just send in the variables rather than this brute-force
			changing of the script, but I haven't figured that out. -->

		<FileUpdate File="$(RootDir)\Installer\Installer.wxs" Regex='Property_ProductVersion = ".*"'
			ReplacementText ="Property_ProductVersion = &quot;$(Version)&quot;" />

		<Message Text="Making Installer Version: $(Version)" Importance="high" />

		<MSBuild Projects="$(RootDir)\Installer\Installer.wixproj"/>

		<!-- remove an existing one with the same name, if necessary -->
		<Delete Files="$(RootDir)\output\installer\$(InstallerFileName)" TreatErrorsAsWarnings="false" />

		<Copy SourceFiles="$(RootDir)\output\installer\GlyssenInstaller.msi"
			DestinationFiles="$(RootDir)\output\installer\$(InstallerFileName)"
		/>
		<Message Text="Copied installer to $(RootDir)\output\installer\$(InstallerFileName)" Importance="high"/>

		<!-- remove the installer which has no version number (wouldn't need this if the copy above was a move, instead) -->
		<Delete Files="$(RootDir)\output\installer\GlyssenInstaller.msi" TreatErrorsAsWarnings="false" />

		<!-- copy it so we aren't modifying the original, which then is a pain on dev machines -->
		<Copy SourceFiles ="$(RootDir)\installer\template.download_info"
			DestinationFiles ="$(RootDir)\output\installer\GlyssenInstaller.$(Version).download_info"/>

		<!-- appcast.xml is used as part of the update notification system -->
		<Copy SourceFiles ="$(RootDir)\installer\appcast.xml"
			DestinationFolder ="$(RootDir)\output\installer"/>

		<FileUpdate File="$(RootDir)\output\installer\GlyssenInstaller.$(Version).download_info"
			DatePlaceHolder='_DATE_'
			DateFormat='yyyy-MM-dd'
			Regex='_VERSION_'
			ReplacementText ="$(Version)" />

		<FileUpdate File="$(RootDir)\output\installer\appcast.xml"
			DatePlaceholder='DEV_RELEASE_DATE'
			Regex='DEV_VERSION_NUMBER'
			ReplacementText ="$(Version)" />

	</Target>

	<Target Name="ReferenceTextUtilityInstaller" DependsOnTargets="RTUVersionNumbers; Build ">

		<FileUpdate File="$(RootDir)\Reference Text Utility\Installer\RTUInstaller.wxs" Regex='Property_ProductVersion = ".*"'
			ReplacementText ="Property_ProductVersion = &quot;$(RTUVersion)&quot;" />

		<Message Text="Making Installer Version: $(RTUVersion)" Importance="high" />

		<MSBuild Projects="$(RootDir)\Reference Text Utility\Installer\RTUInstaller.wixproj"/>

		<!-- remove an existing one with the same name, if necessary -->
		<Delete Files="$(RootDir)\output\RefTextUtilityInstaller\$(RTUInstallerFileName)" TreatErrorsAsWarnings="false" />

		<Copy SourceFiles="$(RootDir)\output\RefTextUtilityInstaller\GlyssenRefTextUtilInstaller.msi"
			DestinationFiles="$(RootDir)\output\RefTextUtilityInstaller\$(RTUInstallerFileName)"
		/>
		<Message Text="Copied installer to $(RootDir)\output\RefTextUtilityInstaller\$(RTUInstallerFileName)" Importance="high"/>

		<!-- remove the installer which has no version number (wouldn't need this if the copy above was a move, instead) -->
		<Delete Files="$(RootDir)\output\RefTextUtilityInstallerinstaller\RefTextUtilityInstaller.msi" TreatErrorsAsWarnings="false" />

	</Target>

	<!-- These targets are designed to be additional steps on TeamCity after running target Installer. Pick the appropriate one
	depending on whether your project's output MUST be signed or it's only nice if it is. For example, a continuous build
	might use SignIfPossible, while a Publication build must use SignInstaller.-->
	<Target Name="SignInstaller" DependsOnTargets="VersionNumbers">
		<Exec Command='sign "$(RootDir)\output\installer\$(InstallerFileName)"'></Exec>
		<Message Text="Signed installer at $(RootDir)\output\installer\$(InstallerFileName)" Importance="high"/>
	</Target>

	<Target Name="SignIfPossible" DependsOnTargets="VersionNumbers">
		<Exec Command='sign "$(RootDir)\output\installer\$(InstallerFileName)"' ContinueOnError="true"></Exec>
	</Target>

	<Target Name="MakeWixForDistFiles">
		<MakeDir Directories ="$(RootDir)\output\installer" ContinueOnError ="true"/>
		<MakeWixForDirTree
			DirectoryReferenceId="ProgramDir"
			ComponentGroupId="DistFiles"
			RootDirectory="$(RootDir)\DistFiles"
			InstallerSourceDirectory="$(RootDir)\Installer"
			OutputFilePath="$(RootDir)\output\installer\GeneratedDistFiles.wxs"
			MatchRegExPattern=".*"
			>
			<Output TaskParameter="OutputFilePath" ItemName="Compile" />
		</MakeWixForDirTree>
	</Target>

	<Target Name="MakeWixForXulRunner">
		<MakeDir Directories ="$(RootDir)\output\installer" ContinueOnError ="true"/>
		<MakeWixForDirTree
			DirectoryReferenceId="XulRunnerDir"
			ComponentGroupId="XulRunner"
			RootDirectory="$(RootDir)\packages\Geckofx60.64.60.0.44\content\Firefox"
			InstallerSourceDirectory="$(RootDir)\Installer"
			OutputFilePath="$(RootDir)\output\installer\GeneratedXulRunner.wxs"
			MatchRegExPattern=".*">
			<Output TaskParameter="OutputFilePath" ItemName="Compile" />
		</MakeWixForDirTree>
	</Target>

<Target Name="Upload" DependsOnTargets="VersionNumbers" >
	<Message Text="Attempting rsync of GlyssenInstaller.$(Version).*" Importance="high"/>
	<Exec Command ='"c:\program files\cwRsync\bin\rsync.exe" -vzlt --chmod=Dug=rwx,Fu=rw,go=r --stats --rsync-path="sudo -u vu2004 rsync" -e"\"c:\program files\cwRsync\bin\ssh\" -oUserKnownHostsFile=C:\BuildAgent\conf\known_hosts -oIdentityFile=/cygdrive/c/BuildAgent/conf/bob.key -l root"  "../output/installer/GlyssenInstaller.$(Version).msi" root@software.sil.org:/var/www/virtual/software.sil.org/htdocs/downloads/r/glyssen/' />
	<Exec Command ='"c:\program files\cwRsync\bin\rsync.exe" -vzlt --chmod=Dug=rwx,Fu=rw,go=r --stats --rsync-path="sudo -u vu2004 rsync" -e"\"c:\program files\cwRsync\bin\ssh\" -oUserKnownHostsFile=C:\BuildAgent\conf\known_hosts -oIdentityFile=/cygdrive/c/BuildAgent/conf/bob.key -l root"  "../output/installer/GlyssenInstaller.$(Version).download_info" root@software.sil.org:/var/www/virtual/software.sil.org/htdocs/downloads/r/glyssen/' />
</Target>

</Project>
